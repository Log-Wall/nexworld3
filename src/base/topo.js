export const topoj = {
  type: "Topology",
  transform: { scale: [10, 10], translate: [0, 0] }, // This will be overwritten later
  arcs: [
    [
      [1.5, -0.5],
      [0, 1],
      [1, 0],
      [0, -1],
      [-1, 0],
    ],
    [
      [42.5, -5.5],
      [0, 1],
      [1, 0],
      [0, -1],
      [-1, 0],
    ], // Sea Lion Cove
  ],
  objects: {
    ports: {
      type: "GeometryCollection",
      geometries: [
        {
          type: "Polygon",
          arcs: [[0]],
          id: "SK",
          properties: { name: "Shala-Khulia" },
        },
        {
          type: "Polygon",
          arcs: [[1]],
          id: "SL",
          properties: { name: "Sea Lion Cove" },
        },
      ],
    },
    marsh: {
      type: "GeometryCollection",
      geometries: [
        // {type: 'Polygon',arcs:[[5,6,7]],id:'MP-SK'}, /* DON'T DELETE, Sample
      ],
    },
    chops: {
      type: "GeometryCollection",
      geometries: [],
    },
    grass: {
      type: "GeometryCollection",
      geometries: [],
    },
    mount: {
      type: "GeometryCollection",
      geometries: [],
    },
    reefs: {
      type: "GeometryCollection",
      geometries: [],
    },
    roughs: {
      type: "GeometryCollection",
      geometries: [],
    },
  },
};

export const insert = (data) => {
  for (let i = 0; i < data.arcs.length; i++) {
    const arc = data.arcs[i];
    const entry = {
      type: "Polygon",
      id: data.id,
      arcs: [[topoj.arcs.length]],
    };
    topoj.objects[data.objt].geometries.push(entry);
    topoj.arcs.push(arc);
  }
};

insert({
  id: "Shala-Khulia",
  objt: "reefs",
  arcs: [
    [
      [1.5, -0.5],
      [0, 2],
      [1, 0],
      [0, 1],
      [1, 0],
      [0, 1],
      [5, 0],

      [0, 1],
      [6, 0],

      [0, -1],
      [1, 0],
      [0, -2],
      [1, 0],
      [0, -2],
      [1, 0],
      [0, -1],
      [1, 0],
      [0, -1],
      [2, 0],
      [0, -1],
      [1, 0],
      [0, -2],
      [1, 0],
      [0, -12],
      [-1, 0],
      [0, -7],
      [1, 0],
      [0, -5],
      [1, 0],
      [0, -6],
      [-1, 0],
      [0, -2],
      [1, 0],
      [0, -5],
      [-1, 0],
      [0, -5],
      [-1, 0],
      [0, -2],
      [-1, 0],
      [0, -1],
      [-1, 0],
      [0, -1],
      [-2, 0],
      [0, -1],
      [-2, 0],
      [0, 1],
      [-2, 0],
      [0, 1],
      [-1, 0],
      [0, -1],
      [-2, 0],
      [0, 1],
      [-2, 0],
      [0, 1],
      [-1, 0],
      [0, 2],
      [-1, 0],
      [0, 3],
      [1, 0],
      [0, 2],
      [1, 0],
      [0, 4],
      [-1, 0],
      [0, 2],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, 1],
      [-2, 0],
      [0, 1],
      [-1, 0],
      [0, 2],
      [-1, 0],
      [0, 2],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, 1],
      [-2, 0],
      [0, -1],
      [-4, 0],
      [0, 1],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, 3],
      [1, 0],
      [0, 2],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, 1],
      [-4, 0],
      [0, 1],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, 4],
      [1, 0],
      [0, 1],
      [2, 0],
      [0, 1],
      [1, 0],
      [0, 3],
      [-1, 0],
      [0, 4],
      [1, 0],
      [0, 1],
      [3, 0],
      [0, 1],
      [2, 0],
      [0, 1],
      [1, 0],
      [0, 1],
      [2, 0],
      [0, 1],
      [1, 0],
      [0, 2],
      [1, 0],
      [0, 1],
      [2, 0],
      [0, 1],
      [3, 0],
      [0, -3],
      [-1, 0],
      [0, -2],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, -1],
      [1, 0],
      [0, -1],
      [-2, 0],
    ],
    /*[
      [-0.5, 0.5],
      [-2, 0],
      [0, -1],
      [-1, 0],
      [0, -2],
      [-1, 0],
      [0, -1],
      [-1, 0],
      [0, -3],
      [-1, 0],
      [0, -1],
      [-1, 0],
      [0, -2],
      [-1, 0],
      [0, -4],
      [1, 0],
      [0, -1],
      [1, 0],
      [0, -2],
      [1, 0],
      [0, -1],
      [2, 0],
      [0, -1],
      [1, 0],
      [0, -2],
      [1, 0],
      [0, -1],
      [1, 0],
      [0, -1],
      [2, 0],
      [0, -1],
      [1, 0],
      [0, -2],
      [5, 0],
      [0, 1],
      [6, 0],
      [0, 1],
      [1, 0],
      // bridge for now
      //[1, 0],
      //[1, 0], // end bridge
      [0, 2],
      [1, 0],
      [0, 1],
      [1, 0],
      [0, 6],
      [1, 0],
      [0, 6],
      [-1, 0],
      [0, 3],
      [-2, 0],
      [0, 1],
      [-1, 0],
      [0, 1],
      [-2, 0],
      [0, 1],
      [-2, 0],
      [0, 1],
      [-2, 0],
      // bridge for now
      [-1, 0],
      [-2, 0], // end bridge
    ],
    [
      [6.5, -1.5],
      [-1, 0], // end bridge
      [0, -1],
      [-1, 0],
      [0, -1],
      [-2, 0],
      [0, 1],
      [-2, 0],
      [0, 2],
      [1, 0],
    ],*/
  ],
});
insert({
  id: "Shala-Khulia",
  objt: "marsh",
  arcs: [
    [
      [0.5, -0.5],
      [0, 1],
      [1, 0],
      [0, -1],
      [-1, 0],
    ],
    [
      [0.5, -0.5],
      [0, -2],
      [2, 0],
      [0, -1],
      [2, 0],
      [0, 1],
      [1, 0],
      [0, 1],
      [1, 0],
    ],
    [
      [6.5, -1.5],
      [0, -2],
      [-1, 0],
      [0, -1],
      [-2, 0],
      [0, -1],
      [-3, 0],
      [0, 1],
      [-1, 0],
      [0, 2],
      [-1, 0],
      [0, 2],
      [2, 0],
    ],
  ],
});
insert({
  id: "Shala-Khulia",
  objt: "grass",
  arcs: [
    [
      [-0.5, -0.5],
      [-1, 0],
      [0, -2],
      [1, 0],
      [0, -2],
      [1, 0],
      [0, -1],
      [3, 0],
      [0, 1],
      [2, 0],
      [0, 1],
      [1, 0],
      [0, 2],
      [5, 0],
      [0, -1],
      [2, 0],
      [0, -1],
      [2, 0],
      [0, -1],
      [1, 0],
      [0, -1],
      [2, 0],
      [0, -3],
      [1, 0],
      [0, -6],
      [-1, 0],
      [0, -6],
      [-1, 0],
      [0, -1],
      [-1, 0],
      [0, -2],
      [-3, 0],
      [0, -1],
      [-6, 0],
      [0, -1],
      [-5, 0],
      [0, 2],
      [-1, 0],
      [0, 1],
      [-2, 0],
      [0, 1],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, 2],
      [-1, 0],
      [0, 1],
      [-2, 0],
      [0, 1],
      [-1, 0],
      [0, 2],
      [-1, 0],
      [0, 1],
      [-1, 0],
      [0, 4],
      [1, 0],
      [0, 2],
      [1, 0],
      [0, 1],
      [1, 0],
      [0, 3],
      [1, 0],
      [0, 1],
      [1, 0],
      [0, 2],
      [1, 0],
      [0, 1],
      [2, 0],
      [0, 1],
    ],
  ],
});
